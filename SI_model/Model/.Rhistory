Sat_lowerr = vector("numeric")
Sat_uperr = vector("numeric")
Sigma = c(seq(1.0,2.5,0.5), 3:50, seq(60,150,10))
for (i in 1:length(Sigma)){
curr_sigma = Sigma[i]
tempname = paste("Sbelow_",format(round(curr_sigma,2),nsmall = 2),sep="")
temp_mean_below = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sbelow = c(mean_Sbelow, temp_mean_below )
mean_Sbelow_lowerr = c( mean_Sbelow_lowerr, (temp_mean_below - 2*temp_sem) )
mean_Sbelow_uperr = c( mean_Sbelow_uperr, (temp_mean_below + 2*temp_sem) )
if(i>1){
diffdata = seldata[,tempname] - tempdata_prev
Sat = c( Sat, mean(diffdata) )
Sat_lowerr = c( Sat_lowerr, -2*sqrt(var(diffdata)/ntimes) )
Sat_uperr = c( Sat_uperr, 2*sqrt(var(diffdata)/ntimes) )
}
tempdata_prev = seldata[,tempname]
tempname = paste("Sabove_",format(round(curr_sigma,2),nsmall=2),sep="")
temp_mean_above = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sabove = c(mean_Sabove, temp_mean_above)
mean_Sabove_lowerr = c( mean_Sabove_lowerr, (temp_mean_above - 2*temp_sem) )
mean_Sabove_uperr = c( mean_Sabove_uperr, (temp_mean_above + 2*temp_sem) )
mean_Stot = c(mean_Stot, (temp_mean_above + temp_mean_below))
}
meanseldata = data.frame(Sigma, mean_Sbelow, mean_Sbelow_lowerr, mean_Sbelow_uperr, mean_Sabove, mean_Sabove_lowerr, mean_Sabove_uperr, mean_Stot)
### Selection plots
max(meanseldata$mean_Sbelow)
min(meanseldata$mean_Sabove)
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.001))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
SIdata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA8/countglobal.txt", sep="\t", header=T)
plot(SIdata$Time,SIdata$Sus,type="l",xlab="Time",ylab="Number of Individuals",ylim=c(0,300000))
lines(SIdata$Time,SIdata$Infected,type="l",col="red")
legend("topright",c("Susceptible","Infected"),lty=c(1,1),lwd=c(2.5,2.5),col=c("black","red"))
plot(SIdata$Time,SIdata$mean_inf,type="l",xlab="Time",ylab="Average infectivity")  #,cex.axis = 1.5, cex.lab=2)
seldata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA8/selection.txt", header=T)
# Construct a new dataframe with the averages per sigma
ntimes = length(seldata$Time)
Sigma = vector("numeric")
mean_Sbelow = vector("numeric")
mean_Sbelow_lowerr = vector("numeric")
mean_Sbelow_uperr = vector("numeric")
mean_Sabove = vector("numeric")
mean_Sabove_lowerr = vector("numeric")
mean_Sabove_uperr = vector("numeric")
mean_Stot = vector("numeric")
Sat = vector("numeric")
Sat_lowerr = vector("numeric")
Sat_uperr = vector("numeric")
Sigma = c(seq(1.0,2.5,0.5), 3:50, seq(60,150,10))
for (i in 1:length(Sigma)){
curr_sigma = Sigma[i]
tempname = paste("Sbelow_",format(round(curr_sigma,2),nsmall = 2),sep="")
temp_mean_below = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sbelow = c(mean_Sbelow, temp_mean_below )
mean_Sbelow_lowerr = c( mean_Sbelow_lowerr, (temp_mean_below - 2*temp_sem) )
mean_Sbelow_uperr = c( mean_Sbelow_uperr, (temp_mean_below + 2*temp_sem) )
if(i>1){
diffdata = seldata[,tempname] - tempdata_prev
Sat = c( Sat, mean(diffdata) )
Sat_lowerr = c( Sat_lowerr, -2*sqrt(var(diffdata)/ntimes) )
Sat_uperr = c( Sat_uperr, 2*sqrt(var(diffdata)/ntimes) )
}
tempdata_prev = seldata[,tempname]
tempname = paste("Sabove_",format(round(curr_sigma,2),nsmall=2),sep="")
temp_mean_above = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sabove = c(mean_Sabove, temp_mean_above)
mean_Sabove_lowerr = c( mean_Sabove_lowerr, (temp_mean_above - 2*temp_sem) )
mean_Sabove_uperr = c( mean_Sabove_uperr, (temp_mean_above + 2*temp_sem) )
mean_Stot = c(mean_Stot, (temp_mean_above + temp_mean_below))
}
meanseldata = data.frame(Sigma, mean_Sbelow, mean_Sbelow_lowerr, mean_Sbelow_uperr, mean_Sabove, mean_Sabove_lowerr, mean_Sabove_uperr, mean_Stot)
### Selection plots
max(meanseldata$mean_Sbelow)
min(meanseldata$mean_Sabove)
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.001))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
SIdata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA9/countglobal.txt", sep="\t", header=T)
plot(SIdata$Time,SIdata$Sus,type="l",xlab="Time",ylab="Number of Individuals",ylim=c(0,300000))
lines(SIdata$Time,SIdata$Infected,type="l",col="red")
legend("topright",c("Susceptible","Infected"),lty=c(1,1),lwd=c(2.5,2.5),col=c("black","red"))
plot(SIdata$Time,SIdata$mean_inf,type="l",xlab="Time",ylab="Average infectivity")  #,cex.axis = 1.5, cex.lab=2)
seldata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA9/selection.txt", header=T)
# Construct a new dataframe with the averages per sigma
ntimes = length(seldata$Time)
Sigma = vector("numeric")
mean_Sbelow = vector("numeric")
mean_Sbelow_lowerr = vector("numeric")
mean_Sbelow_uperr = vector("numeric")
mean_Sabove = vector("numeric")
mean_Sabove_lowerr = vector("numeric")
mean_Sabove_uperr = vector("numeric")
mean_Stot = vector("numeric")
Sat = vector("numeric")
Sat_lowerr = vector("numeric")
Sat_uperr = vector("numeric")
Sigma = c(seq(1.0,2.5,0.5), 3:50, seq(60,150,10))
for (i in 1:length(Sigma)){
curr_sigma = Sigma[i]
tempname = paste("Sbelow_",format(round(curr_sigma,2),nsmall = 2),sep="")
temp_mean_below = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sbelow = c(mean_Sbelow, temp_mean_below )
mean_Sbelow_lowerr = c( mean_Sbelow_lowerr, (temp_mean_below - 2*temp_sem) )
mean_Sbelow_uperr = c( mean_Sbelow_uperr, (temp_mean_below + 2*temp_sem) )
if(i>1){
diffdata = seldata[,tempname] - tempdata_prev
Sat = c( Sat, mean(diffdata) )
Sat_lowerr = c( Sat_lowerr, -2*sqrt(var(diffdata)/ntimes) )
Sat_uperr = c( Sat_uperr, 2*sqrt(var(diffdata)/ntimes) )
}
tempdata_prev = seldata[,tempname]
tempname = paste("Sabove_",format(round(curr_sigma,2),nsmall=2),sep="")
temp_mean_above = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sabove = c(mean_Sabove, temp_mean_above)
mean_Sabove_lowerr = c( mean_Sabove_lowerr, (temp_mean_above - 2*temp_sem) )
mean_Sabove_uperr = c( mean_Sabove_uperr, (temp_mean_above + 2*temp_sem) )
mean_Stot = c(mean_Stot, (temp_mean_above + temp_mean_below))
}
meanseldata = data.frame(Sigma, mean_Sbelow, mean_Sbelow_lowerr, mean_Sbelow_uperr, mean_Sabove, mean_Sabove_lowerr, mean_Sabove_uperr, mean_Stot)
### Selection plots
max(meanseldata$mean_Sbelow)
min(meanseldata$mean_Sabove)
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.001))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
SIdata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA10/countglobal.txt", sep="\t", header=T)
plot(SIdata$Time,SIdata$Sus,type="l",xlab="Time",ylab="Number of Individuals",ylim=c(0,300000))
lines(SIdata$Time,SIdata$Infected,type="l",col="red")
legend("topright",c("Susceptible","Infected"),lty=c(1,1),lwd=c(2.5,2.5),col=c("black","red"))
plot(SIdata$Time,SIdata$mean_inf,type="l",xlab="Time",ylab="Average infectivity")  #,cex.axis = 1.5, cex.lab=2)
seldata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA10/selection.txt", header=T)
# Construct a new dataframe with the averages per sigma
ntimes = length(seldata$Time)
Sigma = vector("numeric")
mean_Sbelow = vector("numeric")
mean_Sbelow_lowerr = vector("numeric")
mean_Sbelow_uperr = vector("numeric")
mean_Sabove = vector("numeric")
mean_Sabove_lowerr = vector("numeric")
mean_Sabove_uperr = vector("numeric")
mean_Stot = vector("numeric")
Sat = vector("numeric")
Sat_lowerr = vector("numeric")
Sat_uperr = vector("numeric")
Sigma = c(seq(1.0,2.5,0.5), 3:50, seq(60,150,10))
for (i in 1:length(Sigma)){
curr_sigma = Sigma[i]
tempname = paste("Sbelow_",format(round(curr_sigma,2),nsmall = 2),sep="")
temp_mean_below = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sbelow = c(mean_Sbelow, temp_mean_below )
mean_Sbelow_lowerr = c( mean_Sbelow_lowerr, (temp_mean_below - 2*temp_sem) )
mean_Sbelow_uperr = c( mean_Sbelow_uperr, (temp_mean_below + 2*temp_sem) )
if(i>1){
diffdata = seldata[,tempname] - tempdata_prev
Sat = c( Sat, mean(diffdata) )
Sat_lowerr = c( Sat_lowerr, -2*sqrt(var(diffdata)/ntimes) )
Sat_uperr = c( Sat_uperr, 2*sqrt(var(diffdata)/ntimes) )
}
tempdata_prev = seldata[,tempname]
tempname = paste("Sabove_",format(round(curr_sigma,2),nsmall=2),sep="")
temp_mean_above = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sabove = c(mean_Sabove, temp_mean_above)
mean_Sabove_lowerr = c( mean_Sabove_lowerr, (temp_mean_above - 2*temp_sem) )
mean_Sabove_uperr = c( mean_Sabove_uperr, (temp_mean_above + 2*temp_sem) )
mean_Stot = c(mean_Stot, (temp_mean_above + temp_mean_below))
}
meanseldata = data.frame(Sigma, mean_Sbelow, mean_Sbelow_lowerr, mean_Sbelow_uperr, mean_Sabove, mean_Sabove_lowerr, mean_Sabove_uperr, mean_Stot)
### Selection plots
max(meanseldata$mean_Sbelow)
min(meanseldata$mean_Sabove)
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.001))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
SIdata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA11/countglobal.txt", sep="\t", header=T)
plot(SIdata$Time,SIdata$Sus,type="l",xlab="Time",ylab="Number of Individuals",ylim=c(0,300000))
lines(SIdata$Time,SIdata$Infected,type="l",col="red")
legend("topright",c("Susceptible","Infected"),lty=c(1,1),lwd=c(2.5,2.5),col=c("black","red"))
plot(SIdata$Time,SIdata$mean_inf,type="l",xlab="Time",ylab="Average infectivity")  #,cex.axis = 1.5, cex.lab=2)
seldata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octA11/selection.txt", header=T)
# Construct a new dataframe with the averages per sigma
ntimes = length(seldata$Time)
Sigma = vector("numeric")
mean_Sbelow = vector("numeric")
mean_Sbelow_lowerr = vector("numeric")
mean_Sbelow_uperr = vector("numeric")
mean_Sabove = vector("numeric")
mean_Sabove_lowerr = vector("numeric")
mean_Sabove_uperr = vector("numeric")
mean_Stot = vector("numeric")
Sat = vector("numeric")
Sat_lowerr = vector("numeric")
Sat_uperr = vector("numeric")
Sigma = c(seq(1.0,2.5,0.5), 3:50, seq(60,150,10))
for (i in 1:length(Sigma)){
curr_sigma = Sigma[i]
tempname = paste("Sbelow_",format(round(curr_sigma,2),nsmall = 2),sep="")
temp_mean_below = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sbelow = c(mean_Sbelow, temp_mean_below )
mean_Sbelow_lowerr = c( mean_Sbelow_lowerr, (temp_mean_below - 2*temp_sem) )
mean_Sbelow_uperr = c( mean_Sbelow_uperr, (temp_mean_below + 2*temp_sem) )
if(i>1){
diffdata = seldata[,tempname] - tempdata_prev
Sat = c( Sat, mean(diffdata) )
Sat_lowerr = c( Sat_lowerr, -2*sqrt(var(diffdata)/ntimes) )
Sat_uperr = c( Sat_uperr, 2*sqrt(var(diffdata)/ntimes) )
}
tempdata_prev = seldata[,tempname]
tempname = paste("Sabove_",format(round(curr_sigma,2),nsmall=2),sep="")
temp_mean_above = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sabove = c(mean_Sabove, temp_mean_above)
mean_Sabove_lowerr = c( mean_Sabove_lowerr, (temp_mean_above - 2*temp_sem) )
mean_Sabove_uperr = c( mean_Sabove_uperr, (temp_mean_above + 2*temp_sem) )
mean_Stot = c(mean_Stot, (temp_mean_above + temp_mean_below))
}
meanseldata = data.frame(Sigma, mean_Sbelow, mean_Sbelow_lowerr, mean_Sbelow_uperr, mean_Sabove, mean_Sabove_lowerr, mean_Sabove_uperr, mean_Stot)
### Selection plots
max(meanseldata$mean_Sbelow)
min(meanseldata$mean_Sabove)
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.001))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
SIdata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octB1/countglobal.txt", sep="\t", header=T)
plot(SIdata$Time,SIdata$Sus,type="l",xlab="Time",ylab="Number of Individuals",ylim=c(0,300000))
lines(SIdata$Time,SIdata$Infected,type="l",col="red")
legend("topright",c("Susceptible","Infected"),lty=c(1,1),lwd=c(2.5,2.5),col=c("black","red"))
plot(SIdata$Time,SIdata$mean_inf,type="l",xlab="Time",ylab="Average infectivity")  #,cex.axis = 1.5, cex.lab=2)
seldata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octB1/selection.txt", header=T)
# Construct a new dataframe with the averages per sigma
ntimes = length(seldata$Time)
Sigma = vector("numeric")
mean_Sbelow = vector("numeric")
mean_Sbelow_lowerr = vector("numeric")
mean_Sbelow_uperr = vector("numeric")
mean_Sabove = vector("numeric")
mean_Sabove_lowerr = vector("numeric")
mean_Sabove_uperr = vector("numeric")
mean_Stot = vector("numeric")
Sat = vector("numeric")
Sat_lowerr = vector("numeric")
Sat_uperr = vector("numeric")
Sigma = c(seq(1.0,2.5,0.5), 3:50, seq(60,150,10))
for (i in 1:length(Sigma)){
curr_sigma = Sigma[i]
tempname = paste("Sbelow_",format(round(curr_sigma,2),nsmall = 2),sep="")
temp_mean_below = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sbelow = c(mean_Sbelow, temp_mean_below )
mean_Sbelow_lowerr = c( mean_Sbelow_lowerr, (temp_mean_below - 2*temp_sem) )
mean_Sbelow_uperr = c( mean_Sbelow_uperr, (temp_mean_below + 2*temp_sem) )
if(i>1){
diffdata = seldata[,tempname] - tempdata_prev
Sat = c( Sat, mean(diffdata) )
Sat_lowerr = c( Sat_lowerr, -2*sqrt(var(diffdata)/ntimes) )
Sat_uperr = c( Sat_uperr, 2*sqrt(var(diffdata)/ntimes) )
}
tempdata_prev = seldata[,tempname]
tempname = paste("Sabove_",format(round(curr_sigma,2),nsmall=2),sep="")
temp_mean_above = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sabove = c(mean_Sabove, temp_mean_above)
mean_Sabove_lowerr = c( mean_Sabove_lowerr, (temp_mean_above - 2*temp_sem) )
mean_Sabove_uperr = c( mean_Sabove_uperr, (temp_mean_above + 2*temp_sem) )
mean_Stot = c(mean_Stot, (temp_mean_above + temp_mean_below))
}
meanseldata = data.frame(Sigma, mean_Sbelow, mean_Sbelow_lowerr, mean_Sbelow_uperr, mean_Sabove, mean_Sabove_lowerr, mean_Sabove_uperr, mean_Stot)
### Selection plots
max(meanseldata$mean_Sbelow)
min(meanseldata$mean_Sabove)
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.001))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.003))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
seldata = read.table("~/hilje2/LevelsOfSelection/SI/SI13octB2/selection.txt", header=T)
# Construct a new dataframe with the averages per sigma
ntimes = length(seldata$Time)
Sigma = vector("numeric")
mean_Sbelow = vector("numeric")
mean_Sbelow_lowerr = vector("numeric")
mean_Sbelow_uperr = vector("numeric")
mean_Sabove = vector("numeric")
mean_Sabove_lowerr = vector("numeric")
mean_Sabove_uperr = vector("numeric")
mean_Stot = vector("numeric")
Sat = vector("numeric")
Sat_lowerr = vector("numeric")
Sat_uperr = vector("numeric")
Sigma = c(seq(1.0,2.5,0.5), 3:50, seq(60,150,10))
for (i in 1:length(Sigma)){
curr_sigma = Sigma[i]
tempname = paste("Sbelow_",format(round(curr_sigma,2),nsmall = 2),sep="")
temp_mean_below = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sbelow = c(mean_Sbelow, temp_mean_below )
mean_Sbelow_lowerr = c( mean_Sbelow_lowerr, (temp_mean_below - 2*temp_sem) )
mean_Sbelow_uperr = c( mean_Sbelow_uperr, (temp_mean_below + 2*temp_sem) )
if(i>1){
diffdata = seldata[,tempname] - tempdata_prev
Sat = c( Sat, mean(diffdata) )
Sat_lowerr = c( Sat_lowerr, -2*sqrt(var(diffdata)/ntimes) )
Sat_uperr = c( Sat_uperr, 2*sqrt(var(diffdata)/ntimes) )
}
tempdata_prev = seldata[,tempname]
tempname = paste("Sabove_",format(round(curr_sigma,2),nsmall=2),sep="")
temp_mean_above = mean(seldata[,tempname])
temp_sem = sqrt( var(seldata[,tempname]) / ntimes )
mean_Sabove = c(mean_Sabove, temp_mean_above)
mean_Sabove_lowerr = c( mean_Sabove_lowerr, (temp_mean_above - 2*temp_sem) )
mean_Sabove_uperr = c( mean_Sabove_uperr, (temp_mean_above + 2*temp_sem) )
mean_Stot = c(mean_Stot, (temp_mean_above + temp_mean_below))
}
meanseldata = data.frame(Sigma, mean_Sbelow, mean_Sbelow_lowerr, mean_Sbelow_uperr, mean_Sabove, mean_Sabove_lowerr, mean_Sabove_uperr, mean_Stot)
### Selection plots
max(meanseldata$mean_Sbelow)
min(meanseldata$mean_Sabove)
plot(meanseldata$Sigma,meanseldata$mean_Sbelow,type="o",pch=21,col="red",bg="red",main = sprintf("Time = %i - %i", seldata$Time[1], seldata$Time[length(seldata$Time)]), xlab="Sigma",ylab="Selection coefficient +/- 2 SEM",ylim=c(-0.001,0.003))
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sbelow_lowerr,rev(meanseldata$mean_Sbelow_uperr)), col=rgb(1,0,0,0.3), border=rgb(1,0,0,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Sabove,type="o",pch=21,col="blue",bg="blue")
polygon(c(meanseldata$Sigma,rev(meanseldata$Sigma)), c(meanseldata$mean_Sabove_lowerr,rev(meanseldata$mean_Sabove_uperr)), col=rgb(0,0,1,0.3), border=rgb(0,0,1,0.3) )
lines(meanseldata$Sigma,meanseldata$mean_Stot,type="o",pch=21,col="black",bg="black")
abline(h=0)
legend("topright",c("S_tot","S_below","S_above"),lty=c(1,1),lwd=c(1.5,1.5),col=c("black","red","blue"))
data = read.table("~/hilje2/LevelsOfSelection/SI/6oct_reprS_vs_Sat0.txt",header = T, sep="\t")
data
data = read.table("~/hilje2/LevelsOfSelection/SI/6oct_reprS_vs_Sat0.txt",header = T, sep=",")
data
Sat0data = read.csv("~/hilje2/LevelsOfSelection/SI/6oct_reprS_vs_Sat0.txt")
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA2/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA2/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
plot(acdata$dist,acdata$ac,type="p",pch=21,cex=0.25,col="grey30",bg="grey30",main = sprintf("Time = %i - %i", autocorr$Time[1], autocorr$Time[length(autocorr$Time)]),xlab="Distance (grid points)",ylab="Autocorrelation")
abline(h=1.0)
lines(acdata$dist,predict(ACmodel),col="purple",lwd=1.5)
b_fit = coef(ACmodel)[2]
b_fit
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA3/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA3/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
b_fit = coef(ACmodel)[2]
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA4/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA4/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA2/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA2/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = coef(ACmodel)[2]
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA3/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA3/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA4/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA4/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA5/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA5/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA6/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA6/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA7/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA7/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA8/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA8/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
autocorr = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA9/autocorr_t200000.txt",header=T,sep="\t")
distances.df = read.table("~/hilje2/LevelsOfSelection/SI/SI6octA9/autocorr_distances.txt",header=F)
distances = c(0,distances.df[,1])
mean_ac = apply(autocorr[,2:ncol(autocorr)],2,mean)
dist = distances[distances>0]
ac = mean_ac[distances>0]
acdata = data.frame(dist,ac)
ACmodel = nls(ac ~ (1+a*exp(b*dist)), data=acdata, start=list(a=0.1,b=-0.1))
summary(ACmodel)
b_fit = c(b_fit, coef(ACmodel)[2] )
b_fit
Sat0data$Sat0
Sat0data$Sat0[Sat0data$reprS<=0.05]
tempdata = data.frame(Sat0data$Sat0[Sat0data$reprS<=0.05],b_fit)
tempdata
colnames(tempdata) = c(Sat0,expAC)
colnames(tempdata) = c("Sat0","expAC")
tempdata
write.table(tempdata,"~/hilje2/LevelsOfSelection/SI/6oct_Sat0_vs_expAC.txt")
b_fit_adapted = 1/(-b_fit)
b_fit_adapted
plot(b_fit_adapted,Sat0data$Sat0[Sat0data$reprS<=0.05],type="o",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",xlab="exponent of autocorrelation (a)", ylab="scale (r-value) for which S_at = 0")
plot(b_fit_adapted,Sat0data$Sat0[Sat0data$reprS<=0.05],type="p",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",xlab="exponent of autocorrelation (a)", ylab="scale (r-value) for which S_at = 0")
abline(lm(Sat0data$Sat0[Sat0data$reprS<=0.05] ~ b_fit_adapted))
plot(b_fit_adapted,Sat0data$Sat0[Sat0data$reprS<=0.05],type="p",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",xlab="exponent of autocorrelation (a)", ylab="scale (r-value) for which S_at = 0")
abline(lm(Sat0data$Sat0[Sat0data$reprS<=0.05] ~ b_fit_adapted),lsty=3)
abline(lm(Sat0data$Sat0[Sat0data$reprS<=0.05] ~ b_fit_adapted),lst=3)
plot(b_fit_adapted,Sat0data$Sat0[Sat0data$reprS<=0.05],type="p",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",xlab="exponent of autocorrelation (a)", ylab="scale (r-value) for which S_at = 0")
abline(lm(Sat0data$Sat0[Sat0data$reprS<=0.05] ~ b_fit_adapted),lty=3)
plot(b_fit_adapted,Sat0data$Sat0[Sat0data$reprS<=0.05],type="p",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",xlab="1/(- exponent of autocorrelation (b))", ylab="scale (r-value) for which S_at = 0")
abline(lm(Sat0data$Sat0[Sat0data$reprS<=0.05] ~ b_fit_adapted),lty=3)
plot(Sat0data$Sat0[Sat0data$reprS<=0.05],b_fit_adapted,type="p",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",xlab="1/(- exponent of autocorrelation (b))", ylab="scale (r-value) for which S_at = 0")
abline(b_fit_adapted ~ lm(Sat0data$Sat0[Sat0data$reprS<=0.05]),lty=3)
plot(Sat0data$Sat0[Sat0data$reprS<=0.05],b_fit_adapted,type="p",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",xlab="1/(- exponent of autocorrelation (b))", ylab="scale (r-value) for which S_at = 0")
abline(lm(b_fit_adapted ~ Sat0data$Sat0[Sat0data$reprS<=0.05]),lty=3)
plot(Sat0data$Sat0[Sat0data$reprS<=0.05],b_fit_adapted,type="p",pch=21,col="black",bg="black",main = "Based on 6octA2-A9",ylab="1/(- exponent of autocorrelation (b))", xlab="scale (r-value) for which S_at = 0")
abline(lm(b_fit_adapted ~ Sat0data$Sat0[Sat0data$reprS<=0.05]),lty=3)
mod = lm(b_fit_adapted ~ Sat0data$Sat0[Sat0data$reprS<=0.05])
summary(mod)
Sat0data
